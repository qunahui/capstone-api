{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger MMS",
    "description": "locpro's magic",
    "termsOfService": "",
    "contact": {
      "email": "nhoxloctran125@gmail.com"
    },
    "license": {
      "name": "No license",
      "url": ""
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://localhost:5000/"
  },
  "servers": [
    {
      "url": "http://localhost:5000/",
      "description": "MMS API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Everything about your Users",
      "externalDocs": {
        "description": "Find out more",
        "url": ""
      }
    },
    {
      "name": "products",
      "description": "Everything about your Products",
      "externalDocs": {
        "description": "Find out more",
        "url": ""
      }
    },
    {
      "name": "sendoAPI",
      "description": "Access to Sendo API"
    },
    {
      "name": "lazadaAPI",
      "description": "Access to Lazada API"
    },
    {
      "name": "sendoProducts",
      "description": "Access to Sendo products in Database"
    },
    {
      "name": "lazadaProducts",
      "description": "Access to Lazada products in Database"
    },
    {
      "name": "categories",
      "description": "Access to Categories in Database"
    },
    {
      "name": "provinces",
      "description": "Access to province in Database"
    },
    {
      "name": "districts",
      "description": "Access to district in Database"
    },
    {
      "name": "wards",
      "description": "Access to ward in Database"
    }
  ],
  "paths": {
    "/users/sign-up": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Sign up the app",
        "operationId": "signUp",
        "requestBody": {
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "email": "mrlocpro@gmail.com",
                "password":"locpro",
                "displayName": "locpro"
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "user": {
                    "_id": "603e3eb9486b9112e0183ecf",
                    "displayName": "huyhuy",
                    "email": "hui1@gmail.com",
                    "__v": 16,
                    "currentStorage": {
                      "storageId": "603e3eb9486b9112e0183ed0",
                      "storageName": "STORAGE_603E3EB9486B9112E0183ECF"
                    }
                  },
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDNlM2ViOTQ4NmI5MTEyZTAxODNlY2YiLCJjdXJyZW50U3RvcmFnZSI6eyJzdG9yYWdlSWQiOiI2MDNlM2ViOTQ4NmI5MTEyZTAxODNlZDAiLCJzdG9yYWdlTmFtZSI6IlNUT1JBR0VfNjAzRTNFQjk0ODZCOTExMkUwMTgzRUNGIn0sImlhdCI6MTYxNTE4NzgyNCwiZXhwIjoxNjE3Nzc5ODI0fQ.mbqF8C5CI4oLRUA53MNRI7EjAAViWSSbjjCx0oQrMK4"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/users/sign-in": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Sign in the app",
        "operationId": "signIn",
        "requestBody": {
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "email": "hui1@gmail.com",
                "password":"huyhuy"
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "user": {
                    "_id": "603e3eb9486b9112e0183ecf",
                    "displayName": "huyhuy",
                    "email": "hui1@gmail.com",
                    "__v": 16,
                    "currentStorage": {
                      "storageId": "603e3eb9486b9112e0183ed0",
                      "storageName": "STORAGE_603E3EB9486B9112E0183ECF"
                    }
                  },
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDNlM2ViOTQ4NmI5MTEyZTAxODNlY2YiLCJjdXJyZW50U3RvcmFnZSI6eyJzdG9yYWdlSWQiOiI2MDNlM2ViOTQ4NmI5MTEyZTAxODNlZDAiLCJzdG9yYWdlTmFtZSI6IlNUT1JBR0VfNjAzRTNFQjk0ODZCOTExMkUwMTgzRUNGIn0sImlhdCI6MTYxNTE4NzgyNCwiZXhwIjoxNjE3Nzc5ODI0fQ.mbqF8C5CI4oLRUA53MNRI7EjAAViWSSbjjCx0oQrMK4"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/users/sign-out": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Sign out the current user",
        "operationId": "signOut",
        "responses": {
          "200":{
            "description": "Successful",
            "content":{
              "application/json":{
                "example": " "
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the current user",
        "operationId": "getCurrentUser",
        "security": [
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200":{
            "description": "Successful",
            "content":{
              "application/json":{
                "example": " "
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        }
      }
    },
    "/users/logout-all": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Sign out all user",
        "operationId": "signOutAll",
        "security": [
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200":{
            "description": "Successful",
            "content":{
              "application/json":{
                "example": " "
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "update current user",
        "operationId": "updateUser",
        "security": [
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody": {
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
          
                "displayName": "huihui1"
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "Successful",
            "content":{
              "application/json":{
                "example": " "
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        }
      }
    },
    "/users/delete": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete user",
        "operationId": "deleteUser",
        "security": [
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200":{
            "description": "Successful",
            "content":{
              "application/json":{
                "example": " "
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        }
      }
    },
    "/products": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Add a new MMS product to the store",
        "operationId": "addProduct",
        "requestBody": {
          "$ref": "#/components/requestBodies/Product"
        },
        "responses": {
          "200":{
            "description": "Successful"
          },
          "405": {
            "description": "Invalid input"
          },
          "500":{
            "description": "Error: Internal Server Error"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get all product",
        "operationId": "getAllProduct",
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
        ]
      }
    },
    "/products/{productId}":{
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get an existing product by id",
        "operationId": "getProduct",
        "parameters":[
          {
            "in":"products/:id",
            "name": "productId",
            "required": true,
            "description": "Numeric ID of the product to get",
            "schema":{
              "type": "integer",
              "enum":[1]
            }

          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "patch": {
        "tags": [
          "products"
        ],
        "summary": "Update an existing product",
        "operationId": "updateProduct",
        "parameters":[
          {
            "in":"products/:id",
            "name": "productId",
            "schema":{
              "type": "integer",
              "enum":[1]
            },
            "required": true,
            "description": "Numeric ID of the product to update"

          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Product"
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
        ]
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete an existing product",
        "operationId": "deleteProduct",
        "parameters":[
          {
            "in":"products/:id",
            "name": "productId",
            "schema":{
              "type": "integer",
              "enum":[1]
            },
            "required": true,
            "description": "Numeric ID of the product to delete"

          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/ward/{wardId}":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "summary": "Get ward by wardId",
        "operationId": "getWard",
        "parameters":[
          {
            "in":"path",
            "name": "wardId",
            "required": true,
            "description": "Numeric ID of ward to get",
            "schema":{
              "type": "integer",
              "example":26734
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":"Phường Tân Định"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Pet not found",
            "content":{
              "application/json":{
                "example":{"message":"Bad token; invalid JSON"}
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/district/{districtId}":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Get district by districtId",
        "operationId": "getDistrict",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "districtId",
            "required": true,
            "description": "Numeric ID of district to get",
            "schema":{
              "type": "integer",
              "example":"2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":"Quận 2"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content":{
              "application/json":{
                "example":"Invalid id"
              }
            }
          },
          "401": {
            "description": "Pet not found",
            "content":{
              "application/json":{
                "example":{"message":"Bad token; invalid JSON"}
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/region/{regionId}":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Get region by regionId",
        "operationId": "getRegion",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "regionId",
            "required": true,
            "description": "Numeric ID of region to get",
            "schema":{
              "type": "integer",
              "example":"2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":"Hà nội"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content":{
              "application/json":{
                "example":"Invalid id"
              }
            }
          },
          "401": {
            "description": "",
            "content":{
              "application/json":{
                "example":{"message":"Bad token; invalid JSON"}
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/products":{
      "post": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "create product on Sendo",
        "operationId": "createProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "name": "đầm đầm đầm ",
                "sku": "lp132435",
                "price": 690000.0,
                "weight": 20.0,
                "stock_availability": true,
                "description": "sạkfasjkhfkdjahfjkdshfjkdhskjfhsdjkhfsdjkhfkjsdhfkdshfjksdkfhsdjkfhdsjkhfsdkjhfsdkjfhksdjfhjksdfhjkdsfhjkds",
                "cat_4_id": 699,
                "tags": "đầm,đầm 2 dây suông,đầm trắng 2 dây,đầm hoa 2 dây,đầm body 2 dây",
                "height": 20.0,
                "length": 20.0,
                "width": 20.0,
                "unit_id": 2,
                "stock_quantity": 2,
                "avatar": {
                    "picture_url": "http://media3.scdn.vn/img4/2021/01_05/ZcTCLs865UkFoBjyQhl2.jpg"
                },
                "pictures": [
                    {
                        "picture_url": "http://media3.scdn.vn/img4/2021/01_05/ZcTCLs865UkFoBjyQhl2.jpg"
                    }
                ],
                "extended_shipping_package": {
                    "is_using_instant": false,
                    "is_using_in_day": false,
                    "is_self_shipping": false,
                    "is_using_standard": true,
                    "is_using_eco": false
                },
                "is_promotion": false,
                 "attributes": [
                        {
                            "attribute_id": 298,
                            "attribute_type": 2,
                            "attribute_name": "Kích thước",
                            "attribute_is_required": true,
                            "attribute_code": "kich_thuoc_1",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": true,
                            "attribute_is_image": false,
                            "attribute_values": [
                                {
                                    "id": 25304,
                                    "value": "27",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        },
                        {
                            "attribute_id": 284,
                            "attribute_type": 1,
                            "attribute_name": "Màu sắc",
                            "attribute_is_required": true,
                            "attribute_code": "mau_sac",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": true,
                            "attribute_is_image": true,
                            "attribute_values": [
                                {
                                    "id": 602,
                                    "value": "Nâu",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        },
                        {
                            "attribute_id": 1495,
                            "attribute_type": 3,
                            "attribute_name": "Chất vải",
                            "attribute_is_required": false,
                            "attribute_code": "chat_vai",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": false,
                            "attribute_is_image": false,
                            "attribute_values": [
                                {
                                    "id": 25068,
                                    "value": "Ren",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        },
                        {
                            "attribute_id": 1485,
                            "attribute_type": 3,
                            "attribute_name": "Chiều dài váy",
                            "attribute_is_required": false,
                            "attribute_code": "chieu_dai_vay",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": false,
                            "attribute_is_image": false,
                            "attribute_values": [
                                {
                                    "id": 24968,
                                    "value": "Trên gối",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        },
                        {
                            "attribute_id": 1488,
                            "attribute_type": 3,
                            "attribute_name": "Chiều dài tay áo",
                            "attribute_is_required": false,
                            "attribute_code": "chieu_dai_tay_ao",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": false,
                            "attribute_is_image": false,
                            "attribute_values": [
                                {
                                    "id": 24982,
                                    "value": "Không tay",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        },
                        {
                            "attribute_id": 1489,
                            "attribute_type": 3,
                            "attribute_name": "Kiểu cổ áo",
                            "attribute_is_required": false,
                            "attribute_code": "kieu_co_ao_1_2_3",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": false,
                            "attribute_is_image": false,
                            "attribute_values": [
                                {
                                    "id": 24986,
                                    "value": "Cổ V",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        },
                        {
                            "attribute_id": 1490,
                            "attribute_type": 3,
                            "attribute_name": "Họa tiết",
                            "attribute_is_required": false,
                            "attribute_code": "hoa_tiet",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": false,
                            "attribute_is_image": false,
                            "attribute_values": [
                                {
                                    "id": 25006,
                                    "value": "Hoa lá",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        },
                        {
                            "attribute_id": 1491,
                            "attribute_type": 3,
                            "attribute_name": "Phong cách",
                            "attribute_is_required": false,
                            "attribute_code": "phong_cach",
                            "attribute_is_custom": false,
                            "attribute_is_checkout": false,
                            "attribute_is_image": false,
                            "attribute_values": [
                                {
                                    "id": 25023,
                                    "value": "Dễ thương",
                                    "attribute_img": null,
                                    "is_selected": true,
                                    "is_custom": false
                                }
                            ]
                        }
                    ],
                "is_config_variant": true,
                "variants": [
                        {
                            "variant_attributes": [
                                {
                                    "attribute_id": 298,
                                    "attribute_code": "kich_thuoc_1",
                                    "option_id": 25304
                                },
                                {
                                    "attribute_id": 284,
                                    "attribute_code": "mau_sac",
                                    "option_id": 602
                                }
                            ],
                            "variant_is_promotion": 0,
                            "variant_sku": "12hfdeebd",
                            "variant_price": 213435.0,
                            "variant_special_price": 0.0,
                            "variant_quantity": 122,
                            "variant_promotion_start_date_timestamp": null,
                            "variant_promotion_end_date_timestamp": null,
                            "variant_is_flash_sales": null,
                            "variant_campaign_status": null,
                            "variant_attribute_hash": "602_25304",
                            "message": null
                        }
                    ],
                "voucher": {
                "product_type": 1
              }
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{"result":40182940,"success":true,"error":null,"status_code":200}
              }
            }
            
          },
          "400": {
            "description": "Invalid ID supplied",
            "content":{
              "application/json":{
                "example":{
                  "result":null,
                  "success":false,
                  "error":{
                    "message":"Mã sản phẩm đã tồn tại",
                    "details":null,
                    "error_details":null
                  },
                    "status_code":400}
              }
            }
          },
          "401": {
            "description": "Pet not found",
            "content":{
              "application/json":{
                "example":{"message":"Bad token; invalid JSON"}
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/sendo/products":{
      "get": {
        "tags": [
          "sendoProducts"
        ],
        "summary": "Get all sendoProduct in database",
        "operationId": "getAllSendoProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"query",
            "name": "storeIds",
            "required": true,
            "description": "array of storeIds",
            "schema":{
              "type": "array",
              "items":[
                {
                  "type": "string",
                  "example": "d63aecd314b4463abc2204aa6a340c6b"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/products/{productId}":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Get product by productId on sendo",
        "operationId": "getProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "productId",
            "required": true,
            "description": "Numeric ID of product to get",
            "schema":{
              "type": "integer",
              "example": 39107134
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "patch": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "update product on sendo",
        "operationId": "updateProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "productId",
            "required": true,
            "description": "Numeric ID of product to update",
            "schema":{
              "type": "integer",
              "example": 39508091
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "name": "mrlocpro1397389213123232"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content":{ 
              "application/json":{
                "schema":{
                  
                },
                "example":{
                  "result": [
                    {
                      "product_id": 39508091
                    }
                  ],
                  "success": true,
                  "error": null,
                  "status_code": 200,
                  "total_records": null,
                  "params": null
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Delete product by Id on sendo",
        "operationId": "deleteProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "productId",
            "required": true,
            "description": "Numeric ID of product to get",
            "schema":{
              "type": "integer",
              "example": 40205805
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{ 
              "application/json":{
                "schema":{
                  
                },
                "example":{
                  "result": [
                    {
                      "product_id": 39508541
                    }
                  ],
                  "success": true,
                  "error": null,
                  "status_code": 200,
                  "total_records": null,
                  "params": null
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/category/{categoryId}":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Get category by categoryId",
        "operationId": "getCategory",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "categoryId",
            "required": true,
            "description": "Numeric ID of category to get",
            "schema":{
              "type": "integer",
              "example": 1485
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/attribute/{attributeId}":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Get attribute by attributeId",
        "operationId": "getAttribute",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "attributeId",
            "required": true,
            "description": "Numeric ID of attribute to get",
            "schema":{
              "type": "integer",
              "example":1485
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/cancel-reason/":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Get cancel reason",
        "operationId": "getCancelReason",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/orders/":{
      "post": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "search order",
        "operationId": "searchOrder",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "description":"page_size: min 10, max 50, date: yyyy/MM/dd",
          "content":{
            "application/json":{
              "schema":{
                
              },
              "example":{
                "page_size": 10,
                "order_status": 2,
                "order_date_from": "2020-05-01",
                "order_date_to": "2020-05-07",
                "order_status_date_from": null,
                "order_status_date_to": null,
                "token": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/orders/{orderNumber}":{
      "get": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Get order by orderNumber on Sendo",
        "operationId": "getOrder",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "orderNumber",
            "required": true,
            "description": "Numeric of order to get",
            "schema":{
              "type": "integer",
              "example": 14674394696
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "put": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "Update order status by orderNumber on Sendo",
        "operationId": "updateOrder",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "orderNumber",
            "required": true,
            "description": "Numeric of order to update",
            "schema":{
              "type": "integer",
              "example": 14674394696
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "orđerStatus" :"13",
                "cancelReason": "CBS100"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/sendo/authorize":{
      "post": {
        "tags": [
          "sendoAPI"
        ],
        "summary": "authorize",
        "operationId": "authorize",
        "parameters":[

        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "app_key": "d63aecd314b4463abc2204aa6a340c6b",
                "app_secret":"a6919d8125cc437c87f004ea2bc87959",
                "storageId":"5ffac838ba04401744309345"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/sendo/products/fetch":{
      "post": {
        "tags": [
          "sendoProducts"
        ],
        "summary": "fetch sendo products",
        "operationId": "fetchSendoProducts",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "store_id":"d63aecd314b4463abc2204aa6a340c6b",
                "storageId":"5ffac838ba04401744309345"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/lazada/products/fetch":{
      "post": {
        "tags": [
          "lazadaProducts"
        ],
        "summary": "fetch lazada products",
        "operationId": "fetchLazadaProducts",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "store_id":"d63aecd314b4463abc2204aa6a340c6b",
                "storageId":"5ffac838ba04401744309345"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/lazada/products":{
      "get": {
        "tags": [
          "lazadaProducts"
        ],
        "summary": "Get all lazadaProduct in database",
        "operationId": "getAllLazadaProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"query",
            "name": "storeIds",
            "required": true,
            "description": "array of storeIds",
            "schema":{
              "type": "array",
              "items":[
                {
                  "type": "string",
                  "example": "200163939035"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/token":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "get accessToken on lazada",
        "operationId": "getAccessToken",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"query",
            "name": "code",
            "required": true,
            "description": "code receive from lazada",
            "schema":{
              "type": "string",
              "example": ""
            }
          },
          {
            "in":"query",
            "name": "state",
            "required": true,
            "description": "state ",
            "schema":{
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "code":"0",
                  "request_id":"0b0e02a716117470077826212"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/products/{sellerSku}":{
      "patch": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "update product by sellerSku on lazada",
        "operationId": "updateProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "sellerSku",
            "required": true,
            "schema":{
              "type": "string",
              "example": "12432456"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                
              },
              "example":{
                
                  "quantity": "125",
                  "price": "500000"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "code":"0",
                  "request_id":"0b0e02a716117470077826212"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "delete product by sellerSku on lazada",
        "operationId": "deleteProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "sellerSku",
            "required": true,
            "schema":{
              "type": "string",
              "example": "124324"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "code":"0",
                  "request_id":"0b0e02a716117470077826212"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/products/{productId}":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "get product by Id on lazada",
        "operationId": "getProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "productId",
            "required": true,
            "schema":{
              "type": "string",
              "example": "1201180724"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/products/":{
      "post": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "create product on lazada",
        "operationId": "createProduct",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                
              },
              "example":{
                "Request": {
                  "Product": {
                    "PrimaryCategory": "13010",
                    "Attributes": {
                      "name": "api create product test sample",
                      "short_description": "This is a nice product",
                      "brand": "Remark",
                      "model": "asdf",
                      "kid_years": "Kids (6-10yrs)",
                      "delivery_option_sof": "No"
                    },
                    "Skus": {
                      "Sku": {
                        "SellerSku": "api-create-test-1",
                        "color_family": "Green",
                        "size": "40",
                        "quantity": "1",
                        "price": "600000.0",
                        "package_length": "11",
                        "package_height": "22",
                        "package_weight": "33",
                        "package_width": "44",
                        "package_content": "this is what's in the box",
                        "Images": {
                          "Image": [
                            "http://sg.s.alibaba.lzd.co/original/59046bec4d53e74f8ad38d19399205e6.jpg",
                            "http://sg.s.alibaba.lzd.co/original/179715d3de39a1918b19eec3279dd482.jpg"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "data":{
                  "item_id":1136164711,
                  "sku_list":[
                    {
                      "shop_sku":"1136164711_VNAMZ-4026616019","seller_sku":"api-create-test-1",
                      "sku_id":4026616019
                      }
                  ]
                },
                "code":"0",
                "request_id":"0be6f7a716117479900025246"
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/attribute/{categoryId}":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "get Attributes by categoryId on lazada",
        "operationId": "getAttributes",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "categoryId",
            "required": true,
            "schema":{
              "type": "number",
              "example": 10100183
            },
            "description":"categoryId must be primary category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attributes not found",
            "content":{
              "application/json":{
                "example": {
                  "code":"601",
                  "type":"ISP",
                  "message":"E601: Requested category not exists","request_id":"0b1195dd16111364977805848"
                }
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/qc-status":{
      "post": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "get QcStatus by seller_sku on lazada",
        "operationId": "getQcStatus",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"query",
            "name": "limit",
            "required": true,
            "schema":{
              "type": "number",
              "enum":[100]
            },
            "description":""
          },
          {
            "in":"query",
            "name": "offset",
            "required": true,
            "schema":{
              "type": "number",
              "enum":[0]
            },
            "description":""
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "seller_skus": ["12432456","124324"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "data": [
                    {
                      "seller_sku": "124324",
                      "status": "rejected"
                    },
                    {
                      "data_changed": "1",
                      "seller_sku": "12432456",
                      "status": "approved"
                    }
                  ],
                  "code": "0",
                  "request_id": "0b1195dd16111401783978066"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attributes not found",
            "content":{
              "application/json":{
                "example":{
                  "code": "1006",
                  "type": "ISP",
                  "message": "E1006: SellerSku Not Exist",
                  "request_id": "0b1187a316111405293796914"
                }
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/cancel-reason":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "get Cancel Reason on lazada",
        "operationId": "getCancelReason",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "data":[
                    {
                      "name":"Out of Stock",
                      "type":"canceled",
                      "reason_id":15
                    },
                    {
                      "name":"Wrong Price or Pricing Error",
                      "type":"canceled",
                      "reason_id":21
                    }
                  ],
                  "code":"0",
                  "request_id":"0b0e02a716117568792665768"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attributes not found",
            "content":{
              "application/json":{
                "example":{
                  "code": "1006",
                  "type": "ISP",
                  "message": "E1006: SellerSku Not Exist",
                  "request_id": "0b1187a316111405293796914"
                }
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/seller-metrics":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "get Seller Metrics by seller_sku on lazada",
        "operationId": "getSellerMetrics",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "data": {
                    "ship_on_time": "0.0",
                    "response_time": "null",
                    "seller_id": 200163939035,
                    "response_rate": "null"
                  },
                  "code": "0",
                  "request_id": "0b1195ad16111533718203524"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attributes not found",
            "content":{
              "application/json":{
                "example":{
                  
                }
              }
            }
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/categories":{
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "get list categories in database",
        "operationId": "getListCategories",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "idpath": []
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "searching primary categories in database",
        "operationId": "getCategories",
        "parameters":[
          {
            "in":"query",
            "name": "search",
            "required": true,
            "schema":{
              "type": "string",
              "example": "áo th"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/refresh-token":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "refresh token and save into database",
        "operationId": "refreshToken",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/orders/cancel/{order_item_id}":{
      "post": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "cacel order item on lazada",
        "operationId": "cancelOrderItem",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "order_item_id",
            "required": true,
            "schema":{
              "type": "number",
              "example": 267078668413259
            },
            "description":""
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "reason_id":21,
                "reason_detail": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "success":true,
                  "code":"0",
                  "request_id":"0b1187a316117593884048180"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/orders/{order_id}":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "Get order by id on lazada",
        "operationId": "getOrder",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "order_id",
            "required": true,
            "schema":{
              "type": "string",
              "example": "267078668313259"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/orders/items/{order_id}":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "Get order items by id on lazada",
        "operationId": "getOrderItems",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "order_id",
            "required": true,
            "schema":{
              "type": "string",
              "example": "267078668313259"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/upload-image":{
      "post": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "upload image on lazada",
        "operationId": "uploadImage",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "multipart/form-data":{
              "schema":{
                "type":"object",
                "properties":{
                  "image":{
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "data":{
                    "image":{
                      "hash_code":"eeaca3c5adf96292ee5c5087787140a1",
                      "url":"https://vn-live-02.slatic.net/p/eeaca3c5adf96292ee5c5087787140a1.jpg"
                    }
                  },
                  "code":"0",
                  "request_id":"0be6f7a716116562977934279"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/api/lazada/seller":{
      "get": {
        "tags": [
          "lazadaAPI"
        ],
        "summary": "get seller info on lazada",
        "operationId": "getSellerInfo",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content":{
              "application/json":{
                "example":{
                  "data":{
                    "image":{
                      "hash_code":"eeaca3c5adf96292ee5c5087787140a1",
                      "url":"https://vn-live-02.slatic.net/p/eeaca3c5adf96292ee5c5087787140a1.jpg"
                    }
                  },
                  "code":"0",
                  "request_id":"0be6f7a716116562977934279"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/provinces":{
      "get": {
        "tags": [
          "provinces"
        ],
        "summary": "get all provinces in database",
        "operationId": "getAllProvinces",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "provinces"
        ],
        "summary": "create province in database",
        "operationId": "createProvinces",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "id":"9999",
                "name":"locpro",
                "type": "Tỉnh"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/provinces/{provinceId}":{
      "get": {
        "tags": [
          "provinces"
        ],
        "summary": "get province by id in database",
        "operationId": "getProvinceById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "provinceId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "22"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "patch": {
        "tags": [
          "provinces"
        ],
        "summary": "update province by id in database",
        "operationId": "updateProvinceById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "provinceId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "9999"
            },
            "description":""
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "name":"locpro1",
                "type": "Tỉnh"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "provinces"
        ],
        "summary": "delete province by id in database",
        "operationId": "deleteProvinceById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "provinceId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "9999"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/districts":{
      "get": {
        "tags": [
          "districts"
        ],
        "summary": "get all districts in database",
        "operationId": "getAllDistricts",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "districts"
        ],
        "summary": "create district in database",
        "operationId": "createDistricts",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "id":"9999",
                "name":"locpro",
                "type": "Huyện"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/districts/{districtId}":{
      "get": {
        "tags": [
          "districts"
        ],
        "summary": "get district by id in database",
        "operationId": "getdistrictById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "districtId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "9999"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "patch": {
        "tags": [
          "districts"
        ],
        "summary": "update district by id in database",
        "operationId": "updateDistrictById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "districtId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "9999"
            },
            "description":""
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "name":"locpro1",
                "type": "Huyện"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "districts"
        ],
        "summary": "delete district by id in database",
        "operationId": "deleteDistrictById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "districtId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "9999"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/province-districts/{provinceId}":{
      "get": {
        "tags": [
          "districts"
        ],
        "summary": "get all districts by provinceId in database",
        "operationId": "getAllDistricts",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name":"provinceId",
            "type":"string",
            "example":"79"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/wards":{
      "get": {
        "tags": [
          "wards"
        ],
        "summary": "get all wards in database",
        "operationId": "getAllWards",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "wards"
        ],
        "summary": "create ward in database",
        "operationId": "createWards",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "id":"9999",
                "name":"locpro",
                "type": "Phường"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/wards/{wardId}":{
      "get": {
        "tags": [
          "wards"
        ],
        "summary": "get ward by id in database",
        "operationId": "getwardById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "wardId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "22"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "patch": {
        "tags": [
          "wards"
        ],
        "summary": "update ward by id in database",
        "operationId": "updateWardById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "wardId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "9999"
            },
            "description":""
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{

              },
              "example":{
                "name":"locpro1",
                "type": "Phường"
                
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "wards"
        ],
        "summary": "delete ward by id in database",
        "operationId": "deleteWardById",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name": "wardId",
            "required": true,
            "schema":{
              "type": "number",
              "example": "9999"
            },
            "description":""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/address/district-wards/{districtId}":{
      "get": {
        "tags": [
          "wards"
        ],
        "summary": "get all wards by districtId in database",
        "operationId": "getAllWards",
        "security":[
          {
            "bearerAuth":[],
            "ApiKeyAuth":[]
          }
        ],
        "parameters":[
          {
            "in":"path",
            "name":"districtId",
            "type":"string",
            "example":"761"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
           
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Product": {
        "required": [
          "name"
  
        ],
        "type": "object",
        "properties": {
          "id":{
            "type": "string",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "dao1"
          },
          "description":{
            "type": "string",
            "example": "..."
          },
          "avatar": {
            "type": "string",
            "example": "url"
          },
          "variants":{
            "type":"array",
            "items":{
              "$ref": "#/components/schemas/Variant"
            }
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "Variant": {
        "required": [
          "id"
  
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "name":{
            "type": "string",
            "example": "dao - 27 - nâu"
          },
          "sku": {
            "type": "string",
            "example": "123"
          },
          "price":{
            "type": "number",
            "example": "3243242"
          },
          "weight":{
            "type": "string",
            "example": "0.2"
          },
          "quantity":{
            "type": "number",
            "example": "2"
          },
          "variant_attributes":{
            "type": "array",
            "items":{
              "type":"object",
              "properties":{
                "attribute_name":{
                  "type": "string",
                  "exmaple": "Kích thước "
                },
                "option_value":{
                  "type": "string",
                  "exmaple": "27"
                }
              }
            }
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Updated name of the pet"
          },
          "status": {
            "type": "string",
            "description": "Updated status of the pet"
          }
        }
      }
    },
    "requestBodies": {
      "Product": {
        "description": "MMS Product object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "required": true
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "required": true
      }
    },
    "securitySchemes": {
     
      "bearerAuth":{
        "type":"http",
        "in":"header",
        "name":"Authorization",
        "scheme": "bearer",
        "bearerFormat": "JWT"  
      },
      "ApiKeyAuth":{
        "type":"apiKey",
        "in":"header",
        "name":"Platform-Token"

      }
    }
  },
  "security":[
    {
      "bearerAuth": []  
    }
  ]
}